<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="support__one__wire_8cpp" kind="file" language="C++">
    <compoundname>support_one_wire.cpp</compoundname>
    <includes refid="support__one__wire_8h" local="yes">support_one_wire.h</includes>
    <incdepgraph>
      <node id="147">
        <label>pins_arduino.h</label>
      </node>
      <node id="144">
        <label>support_one_wire.h</label>
        <link refid="support__one__wire_8h"/>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>WProgram.h</label>
      </node>
      <node id="143">
        <label>src/support_one_wire.cpp</label>
        <link refid="support_one_wire.cpp"/>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="support__one__wire_8cpp_1acf0bd3889ace422037600d106e31db1f" prot="public" static="yes" mutable="no">
        <type>const uint8_t PROGMEM</type>
        <definition>const uint8_t PROGMEM dscrc_table[]</definition>
        <argsstring>[]</argsstring>
        <name>dscrc_table</name>
        <initializer>= {
      0, 94,188,226, 97, 63,221,131,194,156,126, 32,163,253, 31, 65,
    157,195, 33,127,252,162, 64, 30, 95,  1,227,189, 62, 96,130,220,
     35,125,159,193, 66, 28,254,160,225,191, 93,  3,128,222, 60, 98,
    190,224,  2, 92,223,129, 99, 61,124, 34,192,158, 29, 67,161,255,
     70, 24,250,164, 39,121,155,197,132,218, 56,102,229,187, 89,  7,
    219,133,103, 57,186,228,  6, 88, 25, 71,165,251,120, 38,196,154,
    101, 59,217,135,  4, 90,184,230,167,249, 27, 69,198,152,122, 36,
    248,166, 68, 26,153,199, 37,123, 58,100,134,216, 91,  5,231,185,
    140,210, 48,110,237,179, 81, 15, 78, 16,242,172, 47,113,147,205,
     17, 79,173,243,112, 46,204,146,211,141,111, 49,178,236, 14, 80,
    175,241, 19, 77,206,144,114, 44,109, 51,209,143, 12, 82,176,238,
     50,108,142,208, 83, 13,239,177,240,174, 76, 18,145,207, 45,115,
    202,148,118, 40,171,245, 23, 73,  8, 86,180,234,105, 55,213,139,
     87,  9,235,181, 54,104,138,212,149,203, 41,119,244,170, 72, 22,
    233,183, 85, 11,136,214, 52,106, 43,117,151,201, 74, 20,246,168,
    116, 42,200,150, 21, 75,169,247,182,232, 10, 84,215,137,107, 53}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_one_wire.cpp" line="475" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_one_wire.cpp" bodystart="475" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Support module for the one wire protocol. </para>    </briefdescription>
    <detaileddescription>
<para>See arduino one wire module for details: <ulink url="http://playground.arduino.cc/Learning/OneWire">http://playground.arduino.cc/Learning/OneWire</ulink> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">Copyright<sp/>(c)<sp/>2007,<sp/>Jim<sp/>Studt<sp/><sp/>(original<sp/>old<sp/>version<sp/>-<sp/>many<sp/>contributors<sp/>since)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">The<sp/>latest<sp/>version<sp/>of<sp/>this<sp/>library<sp/>may<sp/>be<sp/>found<sp/>at:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>http://www.pjrc.com/teensy/td_libs_OneWire.html</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">OneWire<sp/>has<sp/>been<sp/>maintained<sp/>by<sp/>Paul<sp/>Stoffregen<sp/>(paul@pjrc.com)<sp/>since</highlight></codeline>
<codeline lineno="13"><highlight class="comment">January<sp/>2010.<sp/><sp/>At<sp/>the<sp/>time,<sp/>it<sp/>was<sp/>in<sp/>need<sp/>of<sp/>many<sp/>bug<sp/>fixes,<sp/>but<sp/>had</highlight></codeline>
<codeline lineno="14"><highlight class="comment">been<sp/>abandoned<sp/>the<sp/>original<sp/>author<sp/>(Jim<sp/>Studt).<sp/><sp/>None<sp/>of<sp/>the<sp/>known</highlight></codeline>
<codeline lineno="15"><highlight class="comment">contributors<sp/>were<sp/>interested<sp/>in<sp/>maintaining<sp/>OneWire.<sp/><sp/>Paul<sp/>typically</highlight></codeline>
<codeline lineno="16"><highlight class="comment">works<sp/>on<sp/>OneWire<sp/>every<sp/>6<sp/>to<sp/>12<sp/>months.<sp/><sp/>Patches<sp/>usually<sp/>wait<sp/>that</highlight></codeline>
<codeline lineno="17"><highlight class="comment">long.<sp/><sp/>If<sp/>anyone<sp/>is<sp/>interested<sp/>in<sp/>more<sp/>actively<sp/>maintaining<sp/>OneWire,</highlight></codeline>
<codeline lineno="18"><highlight class="comment">please<sp/>contact<sp/>Paul.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">Version<sp/>2.2:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>Teensy<sp/>3.0<sp/>compatibility,<sp/>Paul<sp/>Stoffregen,<sp/>paul@pjrc.com</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>Arduino<sp/>Due<sp/>compatibility,<sp/>http://arduino.cc/forum/index.php?topic=141030</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>Fix<sp/>DS18B20<sp/>example<sp/>negative<sp/>temperature</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>Fix<sp/>DS18B20<sp/>example&apos;s<sp/>low<sp/>res<sp/>modes,<sp/>Ken<sp/>Butcher</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>Improve<sp/>reset<sp/>timing,<sp/>Mark<sp/>Tillotson</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>Add<sp/>const<sp/>qualifiers,<sp/>Bertrik<sp/>Sikken</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>Add<sp/>initial<sp/>value<sp/>input<sp/>to<sp/>crc16,<sp/>Bertrik<sp/>Sikken</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>Add<sp/>target_search()<sp/>function,<sp/>Scott<sp/>Roberts</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">Version<sp/>2.1:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>Arduino<sp/>1.0<sp/>compatibility,<sp/>Paul<sp/>Stoffregen</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>Improve<sp/>temperature<sp/>example,<sp/>Paul<sp/>Stoffregen</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>DS250x_PROM<sp/>example,<sp/>Guillermo<sp/>Lovato</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>PIC32<sp/>(chipKit)<sp/>compatibility,<sp/>Jason<sp/>Dangel,<sp/>dangel.jason<sp/>AT<sp/>gmail.com</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>Improvements<sp/>from<sp/>Glenn<sp/>Trewitt:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/>-<sp/>crc16()<sp/>now<sp/>works</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>-<sp/>check_crc16()<sp/>does<sp/>all<sp/>of<sp/>calculation/checking<sp/>work.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>-<sp/>Added<sp/>read_bytes()<sp/>and<sp/>write_bytes(),<sp/>to<sp/>reduce<sp/>tedious<sp/>loops.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>-<sp/>Added<sp/>ds2408<sp/>example.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>Delete<sp/>very<sp/>old,<sp/>out-of-date<sp/>readme<sp/>file<sp/>(info<sp/>is<sp/>here)</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">Version<sp/>2.0:<sp/>Modifications<sp/>by<sp/>Paul<sp/>Stoffregen,<sp/>January<sp/>2010:</highlight></codeline>
<codeline lineno="43"><highlight class="comment">http://www.pjrc.com/teensy/td_libs_OneWire.html</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>Search<sp/>fix<sp/>from<sp/>Robin<sp/>James</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1238032295/27#27</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>Use<sp/>direct<sp/>optimized<sp/>I/O<sp/>in<sp/>all<sp/>cases</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>Disable<sp/>interrupts<sp/>during<sp/>timing<sp/>critical<sp/>sections</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>(this<sp/>solves<sp/>many<sp/>random<sp/>communication<sp/>errors)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>Disable<sp/>interrupts<sp/>during<sp/>read-modify-write<sp/>I/O</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>Reduce<sp/>RAM<sp/>consumption<sp/>by<sp/>eliminating<sp/>unnecessary</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>variables<sp/>and<sp/>trimming<sp/>many<sp/>to<sp/>8<sp/>bits</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>Optimize<sp/>both<sp/>crc8<sp/>-<sp/>table<sp/>version<sp/>moved<sp/>to<sp/>flash</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">Modified<sp/>to<sp/>work<sp/>with<sp/>larger<sp/>numbers<sp/>of<sp/>devices<sp/>-<sp/>avoids<sp/>loop.</highlight></codeline>
<codeline lineno="55"><highlight class="comment">Tested<sp/>in<sp/>Arduino<sp/>11<sp/>alpha<sp/>with<sp/>12<sp/>sensors.</highlight></codeline>
<codeline lineno="56"><highlight class="comment">26<sp/>Sept<sp/>2008<sp/>--<sp/>Robin<sp/>James</highlight></codeline>
<codeline lineno="57"><highlight class="comment">http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1238032295/27#27</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">Updated<sp/>to<sp/>work<sp/>with<sp/>arduino-0008<sp/>and<sp/>to<sp/>include<sp/>skip()<sp/>as<sp/>of</highlight></codeline>
<codeline lineno="60"><highlight class="comment">2007/07/06.<sp/>--RJL20</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">Modified<sp/>to<sp/>calculate<sp/>the<sp/>8-bit<sp/>CRC<sp/>directly,<sp/>avoiding<sp/>the<sp/>need<sp/>for</highlight></codeline>
<codeline lineno="63"><highlight class="comment">the<sp/>256-byte<sp/>lookup<sp/>table<sp/>to<sp/>be<sp/>loaded<sp/>in<sp/>RAM.<sp/><sp/>Tested<sp/>in<sp/>arduino-0010</highlight></codeline>
<codeline lineno="64"><highlight class="comment">--<sp/>Tom<sp/>Pollard,<sp/>Jan<sp/>23,<sp/>2008</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">Jim<sp/>Studt&apos;s<sp/>original<sp/>library<sp/>was<sp/>modified<sp/>by<sp/>Josh<sp/>Larios.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">Tom<sp/>Pollard,<sp/>pollard@alum.mit.edu,<sp/>contributed<sp/>around<sp/>May<sp/>20,<sp/>2008</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="71"><highlight class="comment">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="72"><highlight class="comment">&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="73"><highlight class="comment">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="74"><highlight class="comment">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="75"><highlight class="comment">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="76"><highlight class="comment">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="79"><highlight class="comment">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="82"><highlight class="comment">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="83"><highlight class="comment">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="84"><highlight class="comment">NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="85"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="86"><highlight class="comment">OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="87"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment">Much<sp/>of<sp/>the<sp/>code<sp/>was<sp/>inspired<sp/>by<sp/>Derek<sp/>Yerger&apos;s<sp/>code,<sp/>though<sp/>I<sp/>don&apos;t</highlight></codeline>
<codeline lineno="90"><highlight class="comment">think<sp/>much<sp/>of<sp/>that<sp/>remains.<sp/><sp/>In<sp/>any<sp/>event<sp/>that<sp/>was..</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>(copyleft)<sp/>2006<sp/>by<sp/>Derek<sp/>Yerger<sp/>-<sp/>Free<sp/>to<sp/>distribute<sp/>freely.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">The<sp/>CRC<sp/>code<sp/>was<sp/>excerpted<sp/>and<sp/>inspired<sp/>by<sp/>the<sp/>Dallas<sp/>Semiconductor</highlight></codeline>
<codeline lineno="94"><highlight class="comment">sample<sp/>code<sp/>bearing<sp/>this<sp/>copyright.</highlight></codeline>
<codeline lineno="95"><highlight class="comment">//---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="96"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2000<sp/>Dallas<sp/>Semiconductor<sp/>Corporation,<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="97"><highlight class="comment">//</highlight></codeline>
<codeline lineno="98"><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a</highlight></codeline>
<codeline lineno="99"><highlight class="comment">//<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),</highlight></codeline>
<codeline lineno="100"><highlight class="comment">//<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="101"><highlight class="comment">//<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,</highlight></codeline>
<codeline lineno="102"><highlight class="comment">//<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the</highlight></codeline>
<codeline lineno="103"><highlight class="comment">//<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="104"><highlight class="comment">//</highlight></codeline>
<codeline lineno="105"><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included</highlight></codeline>
<codeline lineno="106"><highlight class="comment">//<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">//</highlight></codeline>
<codeline lineno="108"><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS</highlight></codeline>
<codeline lineno="109"><highlight class="comment">//<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="110"><highlight class="comment">//<sp/>MERCHANTABILITY,<sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="111"><highlight class="comment">//<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>DALLAS<sp/>SEMICONDUCTOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES</highlight></codeline>
<codeline lineno="112"><highlight class="comment">//<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight></codeline>
<codeline lineno="113"><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR</highlight></codeline>
<codeline lineno="114"><highlight class="comment">//<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="115"><highlight class="comment">//</highlight></codeline>
<codeline lineno="116"><highlight class="comment">//<sp/>Except<sp/>as<sp/>contained<sp/>in<sp/>this<sp/>notice,<sp/>the<sp/>name<sp/>of<sp/>Dallas<sp/>Semiconductor</highlight></codeline>
<codeline lineno="117"><highlight class="comment">//<sp/>shall<sp/>not<sp/>be<sp/>used<sp/>except<sp/>as<sp/>stated<sp/>in<sp/>the<sp/>Dallas<sp/>Semiconductor</highlight></codeline>
<codeline lineno="118"><highlight class="comment">//<sp/>Branding<sp/>Policy.</highlight></codeline>
<codeline lineno="119"><highlight class="comment">//--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="support__one__wire_8h" kindref="compound">support_one_wire.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="class_one_wire_1aa3f23dc51d861a8d257648c507b14e8d" kindref="member">OneWire::OneWire</ref>(uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(pin,<sp/>INPUT);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmask<sp/>=<sp/>PIN_TO_BITMASK(pin);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>baseReg<sp/>=<sp/>PIN_TO_BASEREG(pin);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ONEWIRE_SEARCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1aae5efdf67928b5ee312ab7d7906416fa" kindref="member">reset_search</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>onewire<sp/>reset<sp/>function.<sp/><sp/>We<sp/>will<sp/>wait<sp/>up<sp/>to<sp/>250uS<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bus<sp/>to<sp/>come<sp/>high,<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>then<sp/>it<sp/>is<sp/>broken<sp/>or<sp/>shorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>return<sp/>a<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>1<sp/>if<sp/>a<sp/>device<sp/>asserted<sp/>a<sp/>presence<sp/>pulse,<sp/>0<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">uint8_t<sp/><ref refid="class_one_wire_1a6a742a9112392567eae3d06dde067c07" kindref="member">OneWire::reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>IO_REG_TYPE<sp/>mask<sp/>=<sp/>bitmask;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>IO_REG_TYPE<sp/>*reg<sp/>IO_REG_ASM<sp/>=<sp/>baseReg;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>r;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>retries<sp/>=<sp/>125;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_INPUT(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>the<sp/>wire<sp/>is<sp/>high...<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--retries<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(2);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!DIRECT_READ(reg,<sp/>mask));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_WRITE_LOW(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_OUTPUT(reg,<sp/>mask);<sp/><sp/></highlight><highlight class="comment">//<sp/>drive<sp/>output<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(480);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_INPUT(reg,<sp/>mask);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>it<sp/>to<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(70);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>!DIRECT_READ(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(410);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>bit.<sp/>Port<sp/>and<sp/>bit<sp/>is<sp/>used<sp/>to<sp/>cut<sp/>lookup<sp/>time<sp/>and<sp/>provide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>more<sp/>certain<sp/>timing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1a6bbc58276d1cb08653dab3ea35378f94" kindref="member">OneWire::write_bit</ref>(uint8_t<sp/>v)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>IO_REG_TYPE<sp/>mask=bitmask;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>IO_REG_TYPE<sp/>*reg<sp/>IO_REG_ASM<sp/>=<sp/>baseReg;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIRECT_WRITE_LOW(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIRECT_MODE_OUTPUT(reg,<sp/>mask);<sp/><sp/></highlight><highlight class="comment">//<sp/>drive<sp/>output<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(10);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIRECT_WRITE_HIGH(reg,<sp/>mask);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive<sp/>output<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(55);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIRECT_WRITE_LOW(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIRECT_MODE_OUTPUT(reg,<sp/>mask);<sp/><sp/></highlight><highlight class="comment">//<sp/>drive<sp/>output<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(65);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIRECT_WRITE_HIGH(reg,<sp/>mask);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive<sp/>output<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(5);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>bit.<sp/>Port<sp/>and<sp/>bit<sp/>is<sp/>used<sp/>to<sp/>cut<sp/>lookup<sp/>time<sp/>and<sp/>provide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>more<sp/>certain<sp/>timing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">uint8_t<sp/><ref refid="class_one_wire_1aeae4c2798b70d9d0ba3091c03ee2d056" kindref="member">OneWire::read_bit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>IO_REG_TYPE<sp/>mask=bitmask;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>IO_REG_TYPE<sp/>*reg<sp/>IO_REG_ASM<sp/>=<sp/>baseReg;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>r;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_OUTPUT(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_WRITE_LOW(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(3);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_INPUT(reg,<sp/>mask);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>pin<sp/>float,<sp/>pull<sp/>up<sp/>will<sp/>raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(10);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>DIRECT_READ(reg,<sp/>mask);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(53);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>byte.<sp/>The<sp/>writing<sp/>code<sp/>uses<sp/>the<sp/>active<sp/>drivers<sp/>to<sp/>raise<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pin<sp/>high,<sp/>if<sp/>you<sp/>need<sp/>power<sp/>after<sp/>the<sp/>write<sp/>(e.g.<sp/>DS18S20<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parasite<sp/>power<sp/>mode)<sp/>then<sp/>set<sp/>&apos;power&apos;<sp/>to<sp/>1,<sp/>otherwise<sp/>the<sp/>pin<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>go<sp/>tri-state<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>write<sp/>to<sp/>avoid<sp/>heating<sp/>in<sp/>a<sp/>short<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>other<sp/>mishap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1a843e9e7e57ed615b4880be0b76b40b7d" kindref="member">OneWire::write</ref>(uint8_t<sp/>v,<sp/>uint8_t<sp/>power<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitMask;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bitMask<sp/>=<sp/>0x01;<sp/>bitMask;<sp/>bitMask<sp/>&lt;&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1a6bbc58276d1cb08653dab3ea35378f94" kindref="member">OneWire::write_bit</ref>(<sp/>(bitMask<sp/>&amp;<sp/>v)?1:0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!power)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_INPUT(baseReg,<sp/>bitmask);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_WRITE_LOW(baseReg,<sp/>bitmask);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1a0fc1e0bdc2ab1f062c98567fa60a69ae" kindref="member">OneWire::write_bytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*buf,<sp/>uint16_t<sp/>count,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>count<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1a843e9e7e57ed615b4880be0b76b40b7d" kindref="member">write</ref>(buf[i]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!power)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_INPUT(baseReg,<sp/>bitmask);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_WRITE_LOW(baseReg,<sp/>bitmask);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">uint8_t<sp/><ref refid="class_one_wire_1afd9bdb8b5a5b69b394dfc76352e00e21" kindref="member">OneWire::read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitMask;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bitMask<sp/>=<sp/>0x01;<sp/>bitMask;<sp/>bitMask<sp/>&lt;&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_one_wire_1aeae4c2798b70d9d0ba3091c03ee2d056" kindref="member">OneWire::read_bit</ref>())<sp/>r<sp/>|=<sp/>bitMask;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1a2407440e8e25b624617593f8ad6447d4" kindref="member">OneWire::read_bytes</ref>(uint8_t<sp/>*buf,<sp/>uint16_t<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>count<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/><ref refid="class_one_wire_1afd9bdb8b5a5b69b394dfc76352e00e21" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>ROM<sp/>select</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1accf808390abd63d3c7bce35677784384" kindref="member">OneWire::select</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>rom[8])</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1a843e9e7e57ed615b4880be0b76b40b7d" kindref="member">write</ref>(0x55);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>ROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/><ref refid="class_one_wire_1a843e9e7e57ed615b4880be0b76b40b7d" kindref="member">write</ref>(rom[i]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>ROM<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1ae3780e2b0ea2ebf6be88298412ac7798" kindref="member">OneWire::skip</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1a843e9e7e57ed615b4880be0b76b40b7d" kindref="member">write</ref>(0xCC);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>ROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1aa8e0f62e830ad05d8035e55c7a309256" kindref="member">OneWire::depower</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>noInterrupts();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>DIRECT_MODE_INPUT(baseReg,<sp/>bitmask);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupts();</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ONEWIRE_SEARCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>need<sp/>to<sp/>use<sp/>this<sp/>function<sp/>to<sp/>start<sp/>a<sp/>search<sp/>again<sp/>from<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>do<sp/>not<sp/>need<sp/>to<sp/>do<sp/>it<sp/>for<sp/>the<sp/>first<sp/>search,<sp/>though<sp/>you<sp/>could.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1aae5efdf67928b5ee312ab7d7906416fa" kindref="member">OneWire::reset_search</ref>()</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>search<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>LastDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>LastDeviceFlag<sp/>=<sp/><ref refid="support__one__wire_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>LastFamilyDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>7;<sp/>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ROM_NO[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>search<sp/>to<sp/>find<sp/>the<sp/>device<sp/>type<sp/>&apos;family_code&apos;<sp/>on<sp/>the<sp/>next<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>search(*newAddr)<sp/>if<sp/>it<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1a0a1b8457adb609a693b865dd474e5116" kindref="member">OneWire::target_search</ref>(uint8_t<sp/>family_code)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>search<sp/>state<sp/>to<sp/>find<sp/>SearchFamily<sp/>type<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>ROM_NO[0]<sp/>=<sp/>family_code;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROM_NO[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>LastDiscrepancy<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>LastFamilyDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>LastDeviceFlag<sp/>=<sp/><ref refid="support__one__wire_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>search.<sp/>If<sp/>this<sp/>function<sp/>returns<sp/>a<sp/>&apos;1&apos;<sp/>then<sp/>it<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enumerated<sp/>the<sp/>next<sp/>device<sp/>and<sp/>you<sp/>may<sp/>retrieve<sp/>the<sp/>ROM<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OneWire::address<sp/>variable.<sp/>If<sp/>there<sp/>are<sp/>no<sp/>devices,<sp/>no<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>devices,<sp/>or<sp/>something<sp/>horrible<sp/>happens<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enumeration<sp/>then<sp/>a<sp/>0<sp/>is<sp/>returned.<sp/><sp/>If<sp/>a<sp/>new<sp/>device<sp/>is<sp/>found<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>address<sp/>is<sp/>copied<sp/>to<sp/>newAddr.<sp/><sp/>Use<sp/>OneWire::reset_search()<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>start<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---<sp/>Replaced<sp/>by<sp/>the<sp/>one<sp/>from<sp/>the<sp/>Dallas<sp/>Semiconductor<sp/>web<sp/>site<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>1-Wire<sp/>Search<sp/>Algorithm<sp/>on<sp/>the<sp/>1-Wire<sp/>bus<sp/>using<sp/>the<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>search<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>TRUE<sp/><sp/>:<sp/>device<sp/>found,<sp/>ROM<sp/>number<sp/>in<sp/>ROM_NO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE<sp/>:<sp/>device<sp/>not<sp/>found,<sp/>end<sp/>of<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">uint8_t<sp/><ref refid="class_one_wire_1a383dc74fc9f8a27b76366a2859c3820a" kindref="member">OneWire::search</ref>(uint8_t<sp/>*newAddr)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>id_bit_number;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>last_zero,<sp/>rom_byte_number,<sp/>search_result;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>id_bit,<sp/>cmp_id_bit;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rom_byte_mask,<sp/>search_direction;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>for<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>id_bit_number<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>last_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>rom_byte_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>rom_byte_mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>search_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>last<sp/>call<sp/>was<sp/>not<sp/>the<sp/>last<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LastDeviceFlag)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-Wire<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_one_wire_1a6a742a9112392567eae3d06dde067c07" kindref="member">reset</ref>())</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastDeviceFlag<sp/>=<sp/><ref refid="support__one__wire_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFamilyDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__one__wire_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>issue<sp/>the<sp/>search<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1a843e9e7e57ed615b4880be0b76b40b7d" kindref="member">write</ref>(0xF0);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>to<sp/>do<sp/>the<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>a<sp/>bit<sp/>and<sp/>its<sp/>complement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_bit<sp/>=<sp/><ref refid="class_one_wire_1aeae4c2798b70d9d0ba3091c03ee2d056" kindref="member">read_bit</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp_id_bit<sp/>=<sp/><ref refid="class_one_wire_1aeae4c2798b70d9d0ba3091c03ee2d056" kindref="member">read_bit</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>no<sp/>devices<sp/>on<sp/>1-wire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((id_bit<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(cmp_id_bit<sp/>==<sp/>1))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>devices<sp/>coupled<sp/>have<sp/>0<sp/>or<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(id_bit<sp/>!=<sp/>cmp_id_bit)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_direction<sp/>=<sp/>id_bit;<sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>write<sp/>value<sp/>for<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>discrepancy<sp/>if<sp/>before<sp/>the<sp/>Last<sp/>Discrepancy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>a<sp/>previous<sp/>next<sp/>then<sp/>pick<sp/>the<sp/>same<sp/>as<sp/>last<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(id_bit_number<sp/>&lt;<sp/>LastDiscrepancy)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_direction<sp/>=<sp/>((ROM_NO[rom_byte_number]<sp/>&amp;<sp/>rom_byte_mask)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>equal<sp/>to<sp/>last<sp/>pick<sp/>1,<sp/>if<sp/>not<sp/>then<sp/>pick<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_direction<sp/>=<sp/>(id_bit_number<sp/>==<sp/>LastDiscrepancy);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>0<sp/>was<sp/>picked<sp/>then<sp/>record<sp/>its<sp/>position<sp/>in<sp/>LastZero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_direction<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_zero<sp/>=<sp/>id_bit_number;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>Last<sp/>discrepancy<sp/>in<sp/>family</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_zero<sp/>&lt;<sp/>9)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFamilyDiscrepancy<sp/>=<sp/>last_zero;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>or<sp/>clear<sp/>the<sp/>bit<sp/>in<sp/>the<sp/>ROM<sp/>byte<sp/>rom_byte_number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>mask<sp/>rom_byte_mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_direction<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROM_NO[rom_byte_number]<sp/>|=<sp/>rom_byte_mask;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROM_NO[rom_byte_number]<sp/>&amp;=<sp/>~rom_byte_mask;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serial<sp/>number<sp/>search<sp/>direction<sp/>write<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_one_wire_1a6bbc58276d1cb08653dab3ea35378f94" kindref="member">write_bit</ref>(search_direction);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>the<sp/>byte<sp/>counter<sp/>id_bit_number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>shift<sp/>the<sp/>mask<sp/>rom_byte_mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_bit_number++;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_byte_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>mask<sp/>is<sp/>0<sp/>then<sp/>go<sp/>to<sp/>new<sp/>SerialNum<sp/>byte<sp/>rom_byte_number<sp/>and<sp/>reset<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rom_byte_mask<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_byte_number++;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_byte_mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(rom_byte_number<sp/>&lt;<sp/>8);<sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>until<sp/>through<sp/>all<sp/>ROM<sp/>bytes<sp/>0-7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>search<sp/>was<sp/>successful<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(id_bit_number<sp/>&lt;<sp/>65))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>successful<sp/>so<sp/>set<sp/>LastDiscrepancy,LastDeviceFlag,search_result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastDiscrepancy<sp/>=<sp/>last_zero;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>last<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LastDiscrepancy<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastDeviceFlag<sp/>=<sp/><ref refid="support__one__wire_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_result<sp/>=<sp/><ref refid="support__one__wire_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>no<sp/>device<sp/>found<sp/>then<sp/>reset<sp/>counters<sp/>so<sp/>next<sp/>&apos;search&apos;<sp/>will<sp/>be<sp/>like<sp/>a<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!search_result<sp/>||<sp/>!ROM_NO[0])</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LastDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LastDeviceFlag<sp/>=<sp/><ref refid="support__one__wire_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LastFamilyDiscrepancy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_result<sp/>=<sp/><ref refid="support__one__wire_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>newAddr[i]<sp/>=<sp/>ROM_NO[i];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search_result;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ONEWIRE_CRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>1-Wire<sp/>CRC<sp/>scheme<sp/>is<sp/>described<sp/>in<sp/>Maxim<sp/>Application<sp/>Note<sp/>27:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Understanding<sp/>and<sp/>Using<sp/>Cyclic<sp/>Redundancy<sp/>Checks<sp/>with<sp/>Maxim<sp/>iButton<sp/>Products&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ONEWIRE_CRC8_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>table<sp/>comes<sp/>from<sp/>Dallas<sp/>sample<sp/>code<sp/>where<sp/>it<sp/>is<sp/>freely<sp/>reusable,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>though<sp/>Copyright<sp/>(C)<sp/>2000<sp/>Dallas<sp/>Semiconductor<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>PROGMEM<sp/>dscrc_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>94,188,226,<sp/>97,<sp/>63,221,131,194,156,126,<sp/>32,163,253,<sp/>31,<sp/>65,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>157,195,<sp/>33,127,252,162,<sp/>64,<sp/>30,<sp/>95,<sp/><sp/>1,227,189,<sp/>62,<sp/>96,130,220,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>35,125,159,193,<sp/>66,<sp/>28,254,160,225,191,<sp/>93,<sp/><sp/>3,128,222,<sp/>60,<sp/>98,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>190,224,<sp/><sp/>2,<sp/>92,223,129,<sp/>99,<sp/>61,124,<sp/>34,192,158,<sp/>29,<sp/>67,161,255,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>70,<sp/>24,250,164,<sp/>39,121,155,197,132,218,<sp/>56,102,229,187,<sp/>89,<sp/><sp/>7,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>219,133,103,<sp/>57,186,228,<sp/><sp/>6,<sp/>88,<sp/>25,<sp/>71,165,251,120,<sp/>38,196,154,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>101,<sp/>59,217,135,<sp/><sp/>4,<sp/>90,184,230,167,249,<sp/>27,<sp/>69,198,152,122,<sp/>36,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>248,166,<sp/>68,<sp/>26,153,199,<sp/>37,123,<sp/>58,100,134,216,<sp/>91,<sp/><sp/>5,231,185,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>140,210,<sp/>48,110,237,179,<sp/>81,<sp/>15,<sp/>78,<sp/>16,242,172,<sp/>47,113,147,205,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>17,<sp/>79,173,243,112,<sp/>46,204,146,211,141,111,<sp/>49,178,236,<sp/>14,<sp/>80,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>175,241,<sp/>19,<sp/>77,206,144,114,<sp/>44,109,<sp/>51,209,143,<sp/>12,<sp/>82,176,238,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>50,108,142,208,<sp/>83,<sp/>13,239,177,240,174,<sp/>76,<sp/>18,145,207,<sp/>45,115,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>202,148,118,<sp/>40,171,245,<sp/>23,<sp/>73,<sp/><sp/>8,<sp/>86,180,234,105,<sp/>55,213,139,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>87,<sp/><sp/>9,235,181,<sp/>54,104,138,212,149,203,<sp/>41,119,244,170,<sp/>72,<sp/>22,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>233,183,<sp/>85,<sp/>11,136,214,<sp/>52,106,<sp/>43,117,151,201,<sp/>74,<sp/>20,246,168,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>116,<sp/>42,200,150,<sp/>21,<sp/>75,169,247,182,232,<sp/>10,<sp/>84,215,137,107,<sp/>53};</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>Dallas<sp/>Semiconductor<sp/>8<sp/>bit<sp/>CRC.<sp/>These<sp/>show<sp/>up<sp/>in<sp/>the<sp/>ROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>registers.<sp/><sp/>(note:<sp/>this<sp/>might<sp/>better<sp/>be<sp/>done<sp/>without<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>table,<sp/>it<sp/>would<sp/>probably<sp/>be<sp/>smaller<sp/>and<sp/>certainly<sp/>fast<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compared<sp/>to<sp/>all<sp/>those<sp/>delayMicrosecond()<sp/>calls.<sp/><sp/>But<sp/>I<sp/>got</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>confused,<sp/>so<sp/>I<sp/>use<sp/>this<sp/>table<sp/>from<sp/>the<sp/>examples.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">uint8_t<sp/><ref refid="class_one_wire_1ae3486a669581b750e4fdf3f3a12b05f1" kindref="member">OneWire::crc8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*addr,<sp/>uint8_t<sp/>len)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>pgm_read_byte(dscrc_table<sp/>+<sp/>(crc<sp/>^<sp/>*addr++));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>Dallas<sp/>Semiconductor<sp/>8<sp/>bit<sp/>CRC<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>much<sp/>slower,<sp/>but<sp/>much<sp/>smaller,<sp/>than<sp/>the<sp/>lookup<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">uint8_t<sp/><ref refid="class_one_wire_1ae3486a669581b750e4fdf3f3a12b05f1" kindref="member">OneWire::crc8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*addr,<sp/>uint8_t<sp/>len)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>inbyte<sp/>=<sp/>*addr++;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>8;<sp/>i;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>mix<sp/>=<sp/>(crc<sp/>^<sp/>inbyte)<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mix)<sp/>crc<sp/>^=<sp/>0x8C;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inbyte<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ONEWIRE_CRC16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_one_wire_1a089c502d26caca5214264261db82d011" kindref="member">OneWire::check_crc16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>input,<sp/>uint16_t<sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>inverted_crc,<sp/>uint16_t<sp/>crc)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>~<ref refid="class_one_wire_1a685131803ff9bd250926de68fb477998" kindref="member">crc16</ref>(input,<sp/>len,<sp/>crc);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(crc<sp/>&amp;<sp/>0xFF)<sp/>==<sp/>inverted_crc[0]<sp/>&amp;&amp;<sp/>(crc<sp/>&gt;&gt;<sp/>8)<sp/>==<sp/>inverted_crc[1];</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">uint16_t<sp/><ref refid="class_one_wire_1a685131803ff9bd250926de68fb477998" kindref="member">OneWire::crc16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>input,<sp/>uint16_t<sp/>len,<sp/>uint16_t<sp/>crc)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>oddparity[16]<sp/>=</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1,<sp/>1,<sp/>0,<sp/>1,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>0,<sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>1,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>len<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>we&apos;re<sp/>just<sp/>copying<sp/>a<sp/>byte<sp/>from<sp/>the<sp/>input,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ll<sp/>be<sp/>doing<sp/>16-bit<sp/>computation<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>cdata<sp/>=<sp/>input[i];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cdata<sp/>=<sp/>(cdata<sp/>^<sp/>crc)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oddparity[cdata<sp/>&amp;<sp/>0x0F]<sp/>^<sp/>oddparity[cdata<sp/>&gt;&gt;<sp/>4])</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>0xC001;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cdata<sp/>&lt;&lt;=<sp/>6;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>cdata;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cdata<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>cdata;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/jakerye/projects/gro-microcontroller/src/support_one_wire.cpp"/>
  </compounddef>
</doxygen>
