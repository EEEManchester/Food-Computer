<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="support__time_8cpp" kind="file" language="C++">
    <compoundname>support_time.cpp</compoundname>
    <includes refid="support__time_8h" local="yes">support_time.h</includes>
    <incdepgraph>
      <node id="175">
        <label>src/support_time.cpp</label>
        <link refid="support_time.cpp"/>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>support_time.h</label>
        <link refid="support__time_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="support__time_8cpp_1ac0623a9834738f5c6747faef9119c7b1" prot="public" static="no">
        <name>LEAP_YEAR</name>
        <param><defname>Y</defname></param>
        <initializer>( ((1970+Y)&gt;0) &amp;&amp; !((1970+Y)%4) &amp;&amp; ( ((1970+Y)%100) || !((1970+Y)%400) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="117" column="9" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="support__time_8cpp_1a52357cbf68af66972047f7aed7a45218" prot="public" static="yes" mutable="no">
        <type>tmElements_t</type>
        <definition>tmElements_t tm</definition>
        <argsstring></argsstring>
        <name>tm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="8" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1a40798fbd78721ae01927d9df12960b33" prot="public" static="yes" mutable="no">
        <type>time_t</type>
        <definition>time_t cacheTime</definition>
        <argsstring></argsstring>
        <name>cacheTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="9" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1a2f682476794ee90f3cd499a0cffd3dc9" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t syncInterval</definition>
        <argsstring></argsstring>
        <name>syncInterval</name>
        <initializer>= 300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="10" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1a5e6556161021464d855f3d1c974a2748" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t monthDays[]</definition>
        <argsstring>[]</argsstring>
        <name>monthDays</name>
        <initializer>={31,28,31,30,31,30,31,31,30,31,30,31}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="119" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1ac7083e439046dbeaff7f1792f069c12f" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sysTime</definition>
        <argsstring></argsstring>
        <name>sysTime</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="207" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1ab8ef0cdf0feb6aed8d34707b0c92fe5c" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t prevMillis</definition>
        <argsstring></argsstring>
        <name>prevMillis</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="208" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1a92e3ebb504612f7f6831a123c4d91a33" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nextSyncTime</definition>
        <argsstring></argsstring>
        <name>nextSyncTime</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="209" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1a713572b69298a2ee90d6ac091e9f105b" prot="public" static="yes" mutable="no">
        <type>timeStatus_t</type>
        <definition>timeStatus_t Status</definition>
        <argsstring></argsstring>
        <name>Status</name>
        <initializer>= timeNotSet</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="210" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="support__time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" prot="public" static="no" mutable="no">
        <type>getExternalTime</type>
        <definition>getExternalTime getTimePtr</definition>
        <argsstring></argsstring>
        <name>getTimePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="212" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refreshCache</definition>
        <argsstring>(time_t t)</argsstring>
        <name>refreshCache</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="12" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="12" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hour</definition>
        <argsstring>()</argsstring>
        <name>hour</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="19" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1ac4706d0cffc9e111a6c6a757b462e88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hour</definition>
        <argsstring>(time_t t)</argsstring>
        <name>hour</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="23" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a5a99d1c070206fef196539dec629443e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hourFormat12</definition>
        <argsstring>()</argsstring>
        <name>hourFormat12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="28" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a3cf3a2a5bc98d77739dd1c8c4c0909b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hourFormat12</definition>
        <argsstring>(time_t t)</argsstring>
        <name>hourFormat12</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="32" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isAM</definition>
        <argsstring>()</argsstring>
        <name>isAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="42" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a4334ceb57e1ed381be82347e196aabc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isAM</definition>
        <argsstring>(time_t t)</argsstring>
        <name>isAM</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="46" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isPM</definition>
        <argsstring>()</argsstring>
        <name>isPM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="50" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1af53f46c9c1e0ad141f99045e3f96d688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isPM</definition>
        <argsstring>(time_t t)</argsstring>
        <name>isPM</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="54" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int minute</definition>
        <argsstring>()</argsstring>
        <name>minute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="58" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a88285e3771bcb970424122a6ee4b40fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int minute</definition>
        <argsstring>(time_t t)</argsstring>
        <name>minute</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="62" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int second</definition>
        <argsstring>()</argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="67" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a10a4dd811353baa12dadadee7c7e5099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int second</definition>
        <argsstring>(time_t t)</argsstring>
        <name>second</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="71" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int day</definition>
        <argsstring>()</argsstring>
        <name>day</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="76" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a51dcd9f072551ba8f47449a4e7f78c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int day</definition>
        <argsstring>(time_t t)</argsstring>
        <name>day</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="80" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weekday</definition>
        <argsstring>()</argsstring>
        <name>weekday</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="85" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a397d9b2a739891092b487211668b496f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weekday</definition>
        <argsstring>(time_t t)</argsstring>
        <name>weekday</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="89" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int month</definition>
        <argsstring>()</argsstring>
        <name>month</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="94" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a726c707dded9d78cf076554eceb956ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int month</definition>
        <argsstring>(time_t t)</argsstring>
        <name>month</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="98" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int year</definition>
        <argsstring>()</argsstring>
        <name>year</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="103" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a8608865f8292c0505e02b67fd1cf39e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int year</definition>
        <argsstring>(time_t t)</argsstring>
        <name>year</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="107" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1af08cc091ce5590067f695e51bfdefd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void breakTime</definition>
        <argsstring>(time_t timeInput, tmElements_t &amp;tm)</argsstring>
        <name>breakTime</name>
        <param>
          <type>time_t</type>
          <declname>timeInput</declname>
        </param>
        <param>
          <type>tmElements_t &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="121" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="121" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t makeTime</definition>
        <argsstring>(tmElements_t &amp;tm)</argsstring>
        <name>makeTime</name>
        <param>
          <type>tmElements_t &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="174" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="174" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t now</definition>
        <argsstring>()</argsstring>
        <name>now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="220" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="220" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTime</definition>
        <argsstring>(time_t t)</argsstring>
        <name>setTime</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="242" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="242" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a6b60a4747bafcd553c95a2110649c31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTime</definition>
        <argsstring>(int hr, int min, int sec, int dy, int mnth, int yr)</argsstring>
        <name>setTime</name>
        <param>
          <type>int</type>
          <declname>hr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mnth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="254" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="254" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1acc6ec9a3678824ee0b252511300cf070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adjustTime</definition>
        <argsstring>(long adjustment)</argsstring>
        <name>adjustTime</name>
        <param>
          <type>long</type>
          <declname>adjustment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="270" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>timeStatus_t</type>
        <definition>timeStatus_t timeStatus</definition>
        <argsstring>()</argsstring>
        <name>timeStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="275" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSyncProvider</definition>
        <argsstring>(getExternalTime getTimeFunction)</argsstring>
        <name>setSyncProvider</name>
        <param>
          <type>getExternalTime</type>
          <declname>getTimeFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="280" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="280" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="support__time_8cpp_1a1cc2f564b2cdcbfdea2d9d65378878ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSyncInterval</definition>
        <argsstring>(time_t interval)</argsstring>
        <name>setSyncInterval</name>
        <param>
          <type>time_t</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" line="286" column="1" bodyfile="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp" bodystart="286" bodyend="289"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Support module for timekeeping. </para>    </briefdescription>
    <detaileddescription>
<para>See arduino time module for details: <ulink url="http://playground.arduino.cc/code/time">http://playground.arduino.cc/code/time</ulink> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="support__time_8h" kindref="compound">support_time.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>tmElements_t<sp/>tm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>cache<sp/>of<sp/>time<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>time_t<sp/>cacheTime;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>the<sp/>cache<sp/>was<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>syncInterval<sp/>=<sp/>300;<sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>sync<sp/>will<sp/>be<sp/>attempted<sp/>after<sp/>this<sp/>many<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(time_t<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/>cacheTime)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1af08cc091ce5590067f695e51bfdefd17" kindref="member">breakTime</ref>(t,<sp/>tm);<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>cacheTime<sp/>=<sp/>t;<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>now<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Hour;<sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>now<sp/>in<sp/>12<sp/>hour<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>for<sp/>the<sp/>given<sp/>time<sp/>in<sp/>12<sp/>hour<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tm.Hour<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12;<sp/></highlight><highlight class="comment">//<sp/>12<sp/>midnight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tm.Hour<sp/><sp/>&gt;<sp/>12)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Hour<sp/>-<sp/>12<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Hour<sp/>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" kindref="member">isAM</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>time<sp/>now<sp/>is<sp/>AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" kindref="member">isAM</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>given<sp/>time<sp/>is<sp/>AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(t);<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(t)<sp/>&gt;=<sp/>12);<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>minute<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Minute;<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>(time_t<sp/>t)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Second;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>()));<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>day<sp/>for<sp/>the<sp/>given<sp/>time<sp/>(0-6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Day;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>()<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sunday<sp/>is<sp/>day<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>(time_t<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Wday;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(time_t<sp/>t)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>month<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Month;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>in<sp/>Processing,<sp/>the<sp/>full<sp/>four<sp/>digit<sp/>year:<sp/>(2009,<sp/>2010<sp/>etc)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>(<ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>year<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmYearToCalendar(tm.Year);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*============================================================================*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>functions<sp/>to<sp/>convert<sp/>to<sp/>and<sp/>from<sp/>system<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>for<sp/>interfacing<sp/>with<sp/>time<sp/>serivces<sp/>and<sp/>are<sp/>not<sp/>normally<sp/>needed<sp/>in<sp/>a<sp/>sketch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leap<sp/>year<sp/>calulator<sp/>expects<sp/>year<sp/>argument<sp/>as<sp/>years<sp/>offset<sp/>from<sp/>1970</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEAP_YEAR(Y)<sp/><sp/><sp/><sp/><sp/>(<sp/>((1970+Y)&gt;0)<sp/>&amp;&amp;<sp/>!((1970+Y)%4)<sp/>&amp;&amp;<sp/>(<sp/>((1970+Y)%100)<sp/>||<sp/>!((1970+Y)%400)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>monthDays[]={31,28,31,30,31,30,31,31,30,31,30,31};<sp/></highlight><highlight class="comment">//<sp/>API<sp/>starts<sp/>months<sp/>from<sp/>1,<sp/>this<sp/>array<sp/>starts<sp/>from<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1af08cc091ce5590067f695e51bfdefd17" kindref="member">breakTime</ref>(time_t<sp/>timeInput,<sp/>tmElements_t<sp/>&amp;tm){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>break<sp/>the<sp/>given<sp/>time_t<sp/>into<sp/>time<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>more<sp/>compact<sp/>version<sp/>of<sp/>the<sp/>C<sp/>library<sp/>localtime<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>year<sp/>is<sp/>offset<sp/>from<sp/>1970<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>,<sp/>monthLength;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>uint32_t<sp/>time;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>days;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>(uint32_t)timeInput;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>tm.Second<sp/>=<sp/>time<sp/>%<sp/>60;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>time<sp/>/=<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>tm.Minute<sp/>=<sp/>time<sp/>%<sp/>60;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>time<sp/>/=<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>hours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>tm.Hour<sp/>=<sp/>time<sp/>%<sp/>24;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>time<sp/>/=<sp/>24;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>tm.Wday<sp/>=<sp/>((time<sp/>+<sp/>4)<sp/>%<sp/>7)<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Sunday<sp/>is<sp/>day<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>days<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(days<sp/>+=<sp/>(<ref refid="support__time_8cpp_1ac0623a9834738f5c6747faef9119c7b1" kindref="member">LEAP_YEAR</ref>(year)<sp/>?<sp/>366<sp/>:<sp/>365))<sp/>&lt;=<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>year++;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>tm.Year<sp/>=<sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>;<sp/></highlight><highlight class="comment">//<sp/>year<sp/>is<sp/>offset<sp/>from<sp/>1970<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>days<sp/>-=<sp/><ref refid="support__time_8cpp_1ac0623a9834738f5c6747faef9119c7b1" kindref="member">LEAP_YEAR</ref>(year)<sp/>?<sp/>366<sp/>:<sp/>365;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>time<sp/><sp/>-=<sp/>days;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>days<sp/>in<sp/>this<sp/>year,<sp/>starting<sp/>at<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>days=0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>month=0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>monthLength=0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(month=0;<sp/>month&lt;12;<sp/>month++)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(month==1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>february</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="support__time_8cpp_1ac0623a9834738f5c6747faef9119c7b1" kindref="member">LEAP_YEAR</ref>(year))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monthLength=29;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monthLength=28;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>monthLength<sp/>=<sp/>monthDays[<ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&gt;=<sp/>monthLength)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>-=<sp/>monthLength;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>tm.Month<sp/>=<sp/>month<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>jan<sp/>is<sp/>month<sp/>1<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>tm.Day<sp/>=<sp/>time<sp/>+<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>day<sp/>of<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">time_t<sp/><ref refid="support__time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" kindref="member">makeTime</ref>(tmElements_t<sp/>&amp;tm){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assemble<sp/>time<sp/>elements<sp/>into<sp/>time_t<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>year<sp/>argument<sp/>is<sp/>offset<sp/>from<sp/>1970<sp/>(see<sp/>macros<sp/>in<sp/>time.h<sp/>to<sp/>convert<sp/>to<sp/>other<sp/>formats)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>previous<sp/>version<sp/>used<sp/>full<sp/>four<sp/>digit<sp/>year<sp/>(or<sp/>digits<sp/>since<sp/>2000),i.e.<sp/>2009<sp/>was<sp/>2009<sp/>or<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>uint32_t<sp/>seconds;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>seconds<sp/>from<sp/>1970<sp/>till<sp/>1<sp/>jan<sp/>00:00:00<sp/>of<sp/>the<sp/>given<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>seconds=<sp/>tm.Year*(SECS_PER_DAY<sp/>*<sp/>365);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tm.Year;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="support__time_8cpp_1ac0623a9834738f5c6747faef9119c7b1" kindref="member">LEAP_YEAR</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>+=<sp/><sp/>SECS_PER_DAY;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>extra<sp/>days<sp/>for<sp/>leap<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>days<sp/>for<sp/>this<sp/>year,<sp/>months<sp/>start<sp/>from<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>tm.Month;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(i<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/><ref refid="support__time_8cpp_1ac0623a9834738f5c6747faef9119c7b1" kindref="member">LEAP_YEAR</ref>(tm.Year))<sp/>{<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>+=<sp/>SECS_PER_DAY<sp/>*<sp/>29;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>+=<sp/>SECS_PER_DAY<sp/>*<sp/>monthDays[i-1];<sp/><sp/></highlight><highlight class="comment">//monthDay<sp/>array<sp/>starts<sp/>from<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>seconds+=<sp/>(tm.Day-1)<sp/>*<sp/>SECS_PER_DAY;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>seconds+=<sp/>tm.Hour<sp/>*<sp/>SECS_PER_HOUR;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>seconds+=<sp/>tm.Minute<sp/>*<sp/>SECS_PER_MIN;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>seconds+=<sp/>tm.Second;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(time_t)seconds;<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*=====================================================*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Low<sp/>level<sp/>system<sp/>time<sp/>functions<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>sysTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>prevMillis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>nextSyncTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>timeStatus_t<sp/>Status<sp/>=<sp/>timeNotSet;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">getExternalTime<sp/><ref refid="support__time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" kindref="member">getTimePtr</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>external<sp/>sync<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//setExternalTime<sp/>setTimePtr;<sp/>//<sp/>not<sp/>used<sp/>in<sp/>this<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_DRIFT_INFO<sp/><sp/><sp/>//<sp/>define<sp/>this<sp/>to<sp/>get<sp/>drift<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">time_t<sp/>sysUnsyncedTime<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>sysTime<sp/>unadjusted<sp/>by<sp/>sync<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">time_t<sp/><ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>prevMillis<sp/>&gt;=<sp/>1000){<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>sysTime++;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>prevMillis<sp/>+=<sp/>1000;<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_DRIFT_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>sysUnsyncedTime++;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>compared<sp/>to<sp/>the<sp/>synced<sp/>time<sp/>to<sp/>measure<sp/>long<sp/>term<sp/>drift<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextSyncTime<sp/>&lt;=<sp/>sysTime)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getTimePtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>t<sp/>=<sp/><ref refid="support__time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" kindref="member">getTimePtr</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(t);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextSyncTime<sp/>=<sp/>sysTime<sp/>+<sp/>syncInterval;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>(Status<sp/>==<sp/>timeNotSet)<sp/>?<sp/><sp/>timeNotSet<sp/>:<sp/>timeNeedsSync;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(time_t)sysTime;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(time_t<sp/>t)<sp/>{<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_DRIFT_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sysUnsyncedTime<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>sysUnsyncedTime<sp/>=<sp/>t;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>time<sp/>of<sp/>the<sp/>first<sp/>call<sp/>to<sp/>set<sp/>a<sp/>valid<sp/>Time<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>sysTime<sp/>=<sp/>(uint32_t)t;<sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>nextSyncTime<sp/>=<sp/>(uint32_t)t<sp/>+<sp/>syncInterval;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>Status<sp/>=<sp/>timeSet;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>prevMillis<sp/>=<sp/>millis();<sp/><sp/></highlight><highlight class="comment">//<sp/>restart<sp/>counting<sp/>from<sp/>now<sp/>(thanks<sp/>to<sp/>Korman<sp/>for<sp/>this<sp/>fix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mnth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yr){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>year<sp/>can<sp/>be<sp/>given<sp/>as<sp/>full<sp/>four<sp/>digit<sp/>year<sp/>or<sp/>two<sp/>digts<sp/>(2010<sp/>or<sp/>10<sp/>for<sp/>2010);<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/></highlight><highlight class="comment">//it<sp/>is<sp/>converted<sp/>to<sp/>years<sp/>since<sp/>1970</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>yr<sp/>&gt;<sp/>99)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr<sp/>=<sp/>yr<sp/>-<sp/>1970;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr<sp/>+=<sp/>30;<sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>tm.Year<sp/>=<sp/>yr;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>tm.Month<sp/>=<sp/>mnth;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>tm.Day<sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>tm.Hour<sp/>=<sp/>hr;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>tm.Minute<sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>tm.Second<sp/>=<sp/>sec;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(<ref refid="support__time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" kindref="member">makeTime</ref>(tm));</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1acc6ec9a3678824ee0b252511300cf070" kindref="member">adjustTime</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>adjustment)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>sysTime<sp/>+=<sp/>adjustment;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indicates<sp/>if<sp/>time<sp/>has<sp/>been<sp/>set<sp/>and<sp/>recently<sp/>synchronized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">timeStatus_t<sp/><ref refid="support__time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" kindref="member">timeStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>();<sp/></highlight><highlight class="comment">//<sp/>required<sp/>to<sp/>actually<sp/>update<sp/>the<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Status;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" kindref="member">setSyncProvider</ref>(<sp/>getExternalTime<sp/>getTimeFunction){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>getTimePtr<sp/>=<sp/>getTimeFunction;<sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>nextSyncTime<sp/>=<sp/>sysTime;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>();<sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>sync<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a1cc2f564b2cdcbfdea2d9d65378878ee" kindref="member">setSyncInterval</ref>(time_t<sp/>interval){<sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>number<sp/>of<sp/>seconds<sp/>between<sp/>re-sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>syncInterval<sp/>=<sp/>(uint32_t)interval;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>nextSyncTime<sp/>=<sp/>sysTime<sp/>+<sp/>syncInterval;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.cpp"/>
  </compounddef>
</doxygen>
