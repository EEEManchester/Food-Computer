<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="support__time_8h" kind="file" language="C++">
    <compoundname>support_time.h</compoundname>
    <includedby refid="support__time_8cpp" local="yes">src/support_time.cpp</includedby>
    <invincdepgraph>
      <node id="180">
        <label>src/support_time.cpp</label>
        <link refid="support__time_8cpp"/>
      </node>
      <node id="179">
        <label>src/support_time.h</label>
        <link refid="support_time.h"/>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
<para>Support module for timekeeping. </para>    </briefdescription>
    <detaileddescription>
<para>See arduino one time module for details: <ulink url="http://playground.arduino.cc/code/time">http://playground.arduino.cc/code/time</ulink> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>SUPPORT_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUPPORT_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;WProgram.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>__time_t_defined,<sp/>but<sp/>avr<sp/>libc<sp/>lacks<sp/>sys/types.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__time_t_defined)<sp/>//<sp/>avoid<sp/>conflict<sp/>with<sp/>newlib<sp/>or<sp/>other<sp/>posix<sp/>libc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time_t;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>ugly<sp/>hack<sp/>allows<sp/>us<sp/>to<sp/>define<sp/>C++<sp/>overloaded<sp/>functions,<sp/>when<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>within<sp/>an<sp/>extern<sp/>&quot;C&quot;,<sp/>as<sp/>newlib&apos;s<sp/>sys/stat.h<sp/>does.<sp/><sp/>Actually<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>intended<sp/>to<sp/>include<sp/>&quot;time.h&quot;<sp/>from<sp/>the<sp/>C<sp/>library<sp/>(on<sp/>ARM,<sp/>but<sp/>AVR<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>that<sp/>file<sp/>at<sp/>all).<sp/><sp/>On<sp/>Mac<sp/>and<sp/>Windows,<sp/>the<sp/>compiler<sp/>will<sp/>find<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Time.h&quot;<sp/>instead<sp/>of<sp/>the<sp/>C<sp/>library<sp/>&quot;time.h&quot;,<sp/>so<sp/>we<sp/>may<sp/>cause<sp/>other<sp/>weird</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>unpredictable<sp/>effects<sp/>by<sp/>conflicting<sp/>with<sp/>the<sp/>C<sp/>library<sp/>header<sp/>&quot;time.h&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>at<sp/>least<sp/>this<sp/>hack<sp/>lets<sp/>us<sp/>define<sp/>C++<sp/>functions<sp/>as<sp/>intended.<sp/><sp/>Hopefully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing<sp/>too<sp/>terrible<sp/>will<sp/>result<sp/>from<sp/>overriding<sp/>the<sp/>C<sp/>library<sp/>header?!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C++&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{timeNotSet,<sp/>timeNeedsSync,<sp/>timeSet</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><sp/>timeStatus_t<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>dowInvalid,<sp/>dowSunday,<sp/>dowMonday,<sp/>dowTuesday,<sp/>dowWednesday,<sp/>dowThursday,<sp/>dowFriday,<sp/>dowSaturday</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/>timeDayOfWeek_t;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>tmSecond,<sp/>tmMinute,<sp/>tmHour,<sp/>tmWday,<sp/>tmDay,tmMonth,<sp/>tmYear,<sp/>tmNbrFields</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/>tmByteFields;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Second;<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Minute;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Hour;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Wday;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>day<sp/>of<sp/>week,<sp/>sunday<sp/>is<sp/>day<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Day;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Month;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>uint8_t<sp/>Year;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>from<sp/>1970;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><sp/><sp/>tmElements_t,<sp/>TimeElements,<sp/>*tmElementsPtr_t;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//convenience<sp/>macros<sp/>to<sp/>convert<sp/>to<sp/>and<sp/>from<sp/>tm<sp/>years<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>tmYearToCalendar(Y)<sp/>((Y)<sp/>+<sp/>1970)<sp/><sp/>//<sp/>full<sp/>four<sp/>digit<sp/>year<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>CalendarYrToTm(Y)<sp/><sp/><sp/>((Y)<sp/>-<sp/>1970)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>tmYearToY2k(Y)<sp/><sp/><sp/><sp/><sp/><sp/>((Y)<sp/>-<sp/>30)<sp/><sp/><sp/><sp/>//<sp/>offset<sp/>is<sp/>from<sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>y2kYearToTm(Y)<sp/><sp/><sp/><sp/><sp/><sp/>((Y)<sp/>+<sp/>30)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>time_t(*getExternalTime)();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>void<sp/><sp/>(*setExternalTime)(const<sp/>time_t);<sp/>//<sp/>not<sp/>used<sp/>in<sp/>this<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Useful<sp/>Constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECS_PER_MIN<sp/><sp/>(60UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECS_PER_HOUR<sp/>(3600UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECS_PER_DAY<sp/><sp/>(SECS_PER_HOUR<sp/>*<sp/>24UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAYS_PER_WEEK<sp/>(7UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECS_PER_WEEK<sp/>(SECS_PER_DAY<sp/>*<sp/>DAYS_PER_WEEK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECS_PER_YEAR<sp/>(SECS_PER_WEEK<sp/>*<sp/>52UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECS_YR_2000<sp/><sp/>(946684800UL)<sp/>//<sp/>the<sp/>time<sp/>at<sp/>the<sp/>start<sp/>of<sp/>y2k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Useful<sp/>Macros<sp/>for<sp/>getting<sp/>elapsed<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>numberOfSeconds(_time_)<sp/>(_time_<sp/>%<sp/>SECS_PER_MIN)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>numberOfMinutes(_time_)<sp/>((_time_<sp/>/<sp/>SECS_PER_MIN)<sp/>%<sp/>SECS_PER_MIN)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>numberOfHours(_time_)<sp/>((<sp/>_time_%<sp/>SECS_PER_DAY)<sp/>/<sp/>SECS_PER_HOUR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dayOfWeek(_time_)<sp/><sp/>(((<sp/>_time_<sp/>/<sp/>SECS_PER_DAY<sp/>+<sp/>4)<sp/><sp/>%<sp/>DAYS_PER_WEEK)+1)<sp/>//<sp/>1<sp/>=<sp/>Sunday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>elapsedDays(_time_)<sp/>(<sp/>_time_<sp/>/<sp/>SECS_PER_DAY)<sp/><sp/>//<sp/>this<sp/>is<sp/>number<sp/>of<sp/>days<sp/>since<sp/>Jan<sp/>1<sp/>1970</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>elapsedSecsToday(_time_)<sp/><sp/>(_time_<sp/>%<sp/>SECS_PER_DAY)<sp/><sp/><sp/>//<sp/>the<sp/>number<sp/>of<sp/>seconds<sp/>since<sp/>last<sp/>midnight<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>macros<sp/>are<sp/>used<sp/>in<sp/>calculating<sp/>alarms<sp/>and<sp/>assume<sp/>the<sp/>clock<sp/>is<sp/>set<sp/>to<sp/>a<sp/>date<sp/>later<sp/>than<sp/>Jan<sp/>1<sp/>1971</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Always<sp/>set<sp/>the<sp/>correct<sp/>time<sp/>before<sp/>settting<sp/>alarms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>previousMidnight(_time_)<sp/>((<sp/>_time_<sp/>/<sp/>SECS_PER_DAY)<sp/>*<sp/>SECS_PER_DAY)<sp/><sp/>//<sp/>time<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>given<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nextMidnight(_time_)<sp/>(<sp/>previousMidnight(_time_)<sp/><sp/>+<sp/>SECS_PER_DAY<sp/>)<sp/><sp/><sp/>//<sp/>time<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>given<sp/>day<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>elapsedSecsThisWeek(_time_)<sp/><sp/>(elapsedSecsToday(_time_)<sp/>+<sp/><sp/>((dayOfWeek(_time_)-1)<sp/>*<sp/>SECS_PER_DAY)<sp/>)<sp/><sp/><sp/>//<sp/>note<sp/>that<sp/>week<sp/>starts<sp/>on<sp/>day<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>previousSunday(_time_)<sp/><sp/>(_time_<sp/>-<sp/>elapsedSecsThisWeek(_time_))<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>time<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>week<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nextSunday(_time_)<sp/>(<sp/>previousSunday(_time_)+SECS_PER_WEEK)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>time<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>week<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Useful<sp/>Macros<sp/>for<sp/>converting<sp/>elapsed<sp/>time<sp/>to<sp/>a<sp/>time_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>minutesToTime_t<sp/>((M))<sp/>(<sp/>(M)<sp/>*<sp/>SECS_PER_MIN)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hoursToTime_t<sp/><sp/><sp/>((H))<sp/>(<sp/>(H)<sp/>*<sp/>SECS_PER_HOUR)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>daysToTime_t<sp/><sp/><sp/><sp/>((D))<sp/>(<sp/>(D)<sp/>*<sp/>SECS_PER_DAY)<sp/>//<sp/>fixed<sp/>on<sp/>Jul<sp/>22<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>weeksToTime_t<sp/><sp/><sp/>((W))<sp/>(<sp/>(W)<sp/>*<sp/>SECS_PER_WEEK)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>time<sp/>and<sp/>date<sp/>functions<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>now<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(time_t<sp/>t);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>now<sp/>in<sp/>12<sp/>hour<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>(time_t<sp/>t);<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>for<sp/>the<sp/>given<sp/>time<sp/>in<sp/>12<sp/>hour<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" kindref="member">isAM</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>time<sp/>now<sp/>is<sp/>AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" kindref="member">isAM</ref>(time_t<sp/>t);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>the<sp/>given<sp/>time<sp/>is<sp/>AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>time<sp/>now<sp/>is<sp/>PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">uint8_t<sp/><ref refid="support__time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(time_t<sp/>t);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>the<sp/>given<sp/>time<sp/>is<sp/>PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>minute<sp/>now<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>(time_t<sp/>t);<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>minute<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>now<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>(time_t<sp/>t);<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>day<sp/>now<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(time_t<sp/>t);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>day<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>weekday<sp/>now<sp/>(Sunday<sp/>is<sp/>day<sp/>1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>(time_t<sp/>t);<sp/></highlight><highlight class="comment">//<sp/>the<sp/>weekday<sp/>for<sp/>the<sp/>given<sp/>time<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>month<sp/>now<sp/><sp/>(Jan<sp/>is<sp/>month<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(time_t<sp/>t);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>month<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>full<sp/>four<sp/>digit<sp/>year:<sp/>(2009,<sp/>2010<sp/>etc)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>(time_t<sp/>t);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>year<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">time_t<sp/><ref refid="support__time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>current<sp/>time<sp/>as<sp/>seconds<sp/>since<sp/>Jan<sp/>1<sp/>1970<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(time_t<sp/>t);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yr);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1acc6ec9a3678824ee0b252511300cf070" kindref="member">adjustTime</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>adjustment);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>date<sp/>strings<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dt_MAX_STRING_LEN<sp/>9<sp/>//<sp/>length<sp/>of<sp/>longest<sp/>date<sp/>string<sp/>(excluding<sp/>terminating<sp/>null)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>monthStr(uint8_t<sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dayStr(uint8_t<sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>monthShortStr(uint8_t<sp/><ref refid="support__time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dayShortStr(uint8_t<sp/><ref refid="support__time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>time<sp/>sync<sp/>functions<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">timeStatus_t<sp/><ref refid="support__time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" kindref="member">timeStatus</ref>();<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>if<sp/>time<sp/>has<sp/>been<sp/>set<sp/>and<sp/>recently<sp/>synchronized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" kindref="member">setSyncProvider</ref>(<sp/>getExternalTime<sp/>getTimeFunction);<sp/></highlight><highlight class="comment">//<sp/>identify<sp/>the<sp/>external<sp/>time<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="support__time_8cpp_1a1cc2f564b2cdcbfdea2d9d65378878ee" kindref="member">setSyncInterval</ref>(time_t<sp/>interval);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>number<sp/>of<sp/>seconds<sp/>between<sp/>re-sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>low<sp/>level<sp/>functions<sp/>to<sp/>convert<sp/>to<sp/>and<sp/>from<sp/>system<sp/>time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="support__time_8cpp_1af08cc091ce5590067f695e51bfdefd17" kindref="member">breakTime</ref>(time_t<sp/>time,<sp/>tmElements_t<sp/>&amp;tm);<sp/><sp/></highlight><highlight class="comment">//<sp/>break<sp/>time_t<sp/>into<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">time_t<sp/><ref refid="support__time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" kindref="member">makeTime</ref>(tmElements_t<sp/>&amp;tm);<sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>time<sp/>elements<sp/>into<sp/>time_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C++&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SUPPORT_TIME_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jakerye/projects/gro-microcontroller/src/support_time.h"/>
  </compounddef>
</doxygen>
